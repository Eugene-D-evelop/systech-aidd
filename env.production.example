# ===========================================
# PRODUCTION CONFIGURATION TEMPLATE
# ===========================================
# 
# Этот файл является шаблоном для production окружения.
# Скопируйте его в .env и заполните реальными значениями:
#   cp env.production.example .env
#   nano .env  # отредактируйте реальные значения
#
# ВАЖНО: 
# - НЕ коммитьте файл .env с реальными секретами в git!
# - Используйте сильные пароли для production
# - Храните секреты в безопасном месте
#

# ===========================================
# TELEGRAM BOT CONFIGURATION
# ===========================================
# Токен бота от @BotFather в Telegram
# Получить: https://t.me/BotFather -> /newbot
TELEGRAM_BOT_TOKEN=your_bot_token_here

# ===========================================
# OPENROUTER API CONFIGURATION
# ===========================================
# API ключ от OpenRouter для доступа к LLM моделям
# Получить: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here

# Модель LLM для использования
# Рекомендуемые модели:
# - openai/gpt-4o-mini (быстрая и недорогая)
# - openai/gpt-4o (мощная, дороже)
# - anthropic/claude-3.5-sonnet (альтернатива)
OPENROUTER_MODEL=openai/gpt-4o-mini

# ===========================================
# LLM PARAMETERS
# ===========================================
# Температура генерации (0.0 - 2.0)
# 0.0 = детерминированный, 1.0 = креативный
TEMPERATURE=0.7

# Максимальное количество токенов в ответе
MAX_TOKENS=1000

# Таймаут запроса к LLM API (секунды)
TIMEOUT=60

# ===========================================
# BOT SETTINGS
# ===========================================
# Системный промпт - определяет роль и поведение бота
# Можно использовать многострочный текст
SYSTEM_PROMPT=Ты полезный AI-ассистент. Отвечай кратко и по существу.

# Максимальная длина истории диалога (количество сообщений)
# Рекомендуется: 10-20 для баланса между контекстом и стоимостью
MAX_HISTORY_LENGTH=10

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# URL подключения к PostgreSQL
# Формат: postgresql://[user]:[password]@[host]:[port]/[database]
# 
# ВАЖНО: Используйте внутреннее имя сервиса 'postgres' для Docker Compose
DATABASE_URL=postgresql://postgres:SecurePassword123!@postgres:5432/systech_aidd

# Таймаут подключения к базе данных (секунды)
DATABASE_TIMEOUT=10

# ===========================================
# POSTGRES CREDENTIALS
# ===========================================
# Эти переменные используются для инициализации PostgreSQL контейнера
# ВАЖНО: Пароль должен совпадать с тем, что указан в DATABASE_URL

# Имя базы данных
POSTGRES_DB=systech_aidd

# Имя пользователя PostgreSQL
POSTGRES_USER=postgres

# Пароль для PostgreSQL
# ОБЯЗАТЕЛЬНО измените на сильный пароль для production!
# Рекомендации:
# - Минимум 16 символов
# - Используйте буквы, цифры и спецсимволы
# - Не используйте словарные слова
POSTGRES_PASSWORD=SecurePassword123!

# ===========================================
# PRODUCTION NOTES
# ===========================================
# 
# 1. Безопасность:
#    - Используйте уникальные сильные пароли
#    - Регулярно ротируйте секреты
#    - Ограничьте доступ к серверу через firewall
#
# 2. Бэкапы:
#    - Настройте регулярные бэкапы PostgreSQL
#    - Храните бэкапы в отдельном месте
#
# 3. Мониторинг:
#    - Отслеживайте логи сервисов
#    - Настройте алерты на ошибки
#    - Мониторьте использование ресурсов
#
# 4. Обновления:
#    - Регулярно обновляйте Docker образы
#    - Тестируйте обновления перед применением
#

